import{_ as s,o as a,c as n,V as p}from"./chunks/framework.1200f37d.js";const l="/vp-blog/assets/06.57e64e8f.jpeg",o="/vp-blog/assets/05.710fe408.png",u=JSON.parse('{"title":"使 a === 1 && a === 2 && a === 3 为 true 的几种\\"下毒\\"方法","description":"","frontmatter":{"title":"使 a === 1 && a === 2 && a === 3 为 true 的几种\\"下毒\\"方法","date":"2023-04-20T09:52:26.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}},"headers":[],"relativePath":"docs/posts/a-1-a-2-a-3-的几种下毒方法.md","filePath":"docs/posts/a-1-a-2-a-3-的几种下毒方法.md","lastUpdated":1690688711000}'),e={name:"docs/posts/a-1-a-2-a-3-的几种下毒方法.md"},c=p('<h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p><img src="'+l+`" alt=""></p><p>这算得上是近些年的前端网红题了，曾经对这种网红题非常抵触，认为非常没有意义。</p><p>看到了不少人有做分享，有各种各样的方案，有涉及到 JS 非常基础的知识点，也不得不感叹解题者的脑洞之大。</p><p>但是，拿来做面试题为难没有看过的面试者，就非常非常不地道了。</p><h2 id="鹤顶红" tabindex="-1">鹤顶红 <a class="header-anchor" href="#鹤顶红" aria-label="Permalink to &quot;鹤顶红&quot;">​</a></h2><p>鹤顶红是武侠剧中出现最多的毒药，真的是江湖出行必备的毒药。</p><p>正常情况下，如果 <code>let a = 1;</code> 则，表达式的后半段必不成立。但是容易想到如果在每个阶段自增后，表达式是可能成立的。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>可是这就属于把题改了，我们需要把自增的逻辑藏起来。由于 <code>a</code> 是基础类型，我们基本上不可能对其做什么改造了。</p><p>但是我们如果把 <code>a</code> 定义到 <code>window</code> 上，再加上诸如 <code>Object.defineProperty</code> 的 api，是能够做到的。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> tmp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#A6ACCD;">(window</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">tmp</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>由于 <code>defineProperty</code> 的限制，我们不能把 <code>1</code> 作为 <code>value</code>, 设置在属性描述符号内部，不得不外部定义一个变量。</p><p><code>defineProperty</code> 在诸如 Vue2 的框架中，用的非常多，几乎是面试高频会被问到的，所以这种“毒药”是你行走前端江湖必备的。</p><h2 id="曼陀罗" tabindex="-1">曼陀罗 <a class="header-anchor" href="#曼陀罗" aria-label="Permalink to &quot;曼陀罗&quot;">​</a></h2><p>曼陀罗这个名字颇具异域风情、《神雕侠侣》中杨过就是中了此毒。</p><p>说到这里我是要将此题改为另一道类似的题目：使 <code>a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3</code> 返回 <code>true</code>。</p><p>将严格相等改为了普通的相等，因为通常代码规范中要求使用严格相等，导致 <code>==</code> 不常写，故将此命名为这个异域的名字。</p><p>正因为是不严格相等，我们可以利用 JS 中的类型转换机制来下毒。</p><p>这个机制是这样的：</p><ul><li>如果两个值类型相同，则之间进行比较，和全等是一样的。</li><li>如果一个是 null，另一个是 undefined，则相等。</li><li>如果一个是数值，另一个是字符串，把字符串转换为数值，再比较转换后的数值。</li><li>如果一个是 true，把它转成 1，再比较。</li><li>如果一个是 false，把它转成 0，再比较。</li><li>如果一个是对象，另一个是数值或字符串，会将对象转换为原始值，再比较。用到的是 valueOf() 和 toString() 方法。</li></ul><p>我们可以利用最后一点解这个题：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">valueOf</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">a </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>先前提到的那种解法必然也可以解这道题，但是这个写法不能用于上一道题，因为全等不会触发类型转换。</p><h2 id="十香软筋散" tabindex="-1">十香软筋散 <a class="header-anchor" href="#十香软筋散" aria-label="Permalink to &quot;十香软筋散&quot;">​</a></h2><p>此毒无色无香，药性一发作便全身筋骨酸软，数日后虽行动如常，内力半点发挥不出。毒药和解药表面无异，若中毒者再服毒药则气绝身亡。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a‌ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a‍ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">a‌ </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a‍ </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> a </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>你可能会说：“这段代码应该是会报错的！”。但是相信我，你复制到控制台执行一下试试。注意我这里有一个 <code>a</code> 是正常的 <code>a</code>，如果你有执行过上面别的方法，注意先刷新一下窗口。</p><p>是的 <code>const</code> 声明的是常量，理应抛出错误：<code>Identifier &#39;haha&#39; has already been declared</code>。</p><p>实际上，我这里定义的三个 <code>a</code> 是不同的变量，有一个是 <code>a</code>, 一个是 <code>ax</code>, 一个是 <code>ay</code>，其中 x, y 是被我替换为 unicode 里不可见的字符，所以在上面的代码里看到的都是 <code>a</code> 的形式。</p><p>我目前正在使用 webstorm 编辑这篇文章，我也发现了这些不可见字符会在编辑器里显示出来“怪怪的”，如果你也打开这篇 markdown，你会发现：</p><p><img src="`+o+'" alt=""></p><p>构造变量名称（唯一标识符）的通用规则是：</p><ul><li>名称可包含字母、数字、下划线和美元符号</li><li>名称必须以字母开头</li><li>名称也可以 $ 和 _ 开头</li><li>名称对大小写敏感（y 和 Y 是不同的变量）</li><li>保留字（比如 JavaScript 的关键词）无法用作变量名称</li></ul><p>实际上，使用中文，甚至是 emoji 表情作为变量名称都是合法的，所以这里可以使用不可见的 unicode 字符作为变量名。</p><p>当然，如果想要运行正确，我们得偷偷的把题改了，使用我们新声明的变量，虽然它们看起来一摸一样。</p><p>这种“下毒”，真是无色无味，正像软筋散一样。</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>这边汇总了二个针对原题的解法：通过使用 <code>Object.defineProperty</code> 和利用变量名称的规则的方法；</p><p>以及对它的变种题目：通过对象类型转化时默认调用 <code>valueOf</code> 函数的机制。</p><p>这道题至少也算给我们带来了三个 JS 基础知识点，好了，你（这道题）可以毒发身亡了。</p>',41),t=[c];function r(D,i,y,C,F,A){return a(),n("div",null,t)}const m=s(e,[["render",r]]);export{u as __pageData,m as default};
