import{_ as s,o as n,c as a,V as o}from"./chunks/framework.cd55fae3.js";const d=JSON.parse('{"title":"keyof 类型操作符","description":"类型体操前需要熟悉的知识点","frontmatter":{"title":"keyof 类型操作符","description":"类型体操前需要熟悉的知识点","date":"2024-04-08T15:31:14.000Z","tags":["Typescript"],"layout":"post","cover":{"image":"/vp-blog/covers/ts.png"}},"headers":[],"relativePath":"docs/posts/ts-keyof.md","filePath":"docs/posts/ts-keyof.md","lastUpdated":1713190625000}'),p={name:"docs/posts/ts-keyof.md"},l=o(`<h2 id="keyof-类型操作符" tabindex="-1"><code>keyof</code> 类型操作符 <a class="header-anchor" href="#keyof-类型操作符" aria-label="Permalink to &quot;\`keyof\` 类型操作符&quot;">​</a></h2><p><code>keyof</code> 类型操作符用于获取对象的所有键，返回一个由对象的键组成的联合类型。下方类型 <code>P</code> 和 <code>type P = &quot;x&quot; | &quot;y&quot;</code> 是相同类型。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Point</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">P</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">keyof</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Point</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// &#39;x&#39; | &#39;y&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果类型有一个 <code>string</code> 或 <code>number</code> 索引签名，<code>keyof</code> 会返回这些类型：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Arrayish</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> [</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">unknown</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">keyof</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Arrayish</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Mapish</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> [</span><span style="color:#BABED8;font-style:italic;">k</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">unknown</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">M</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">keyof</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Mapish</span><span style="color:#89DDFF;">;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// string | number</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>在这个例子中，<code>M</code> 是 <code>string</code> 和 <code>number</code> 的联合类型，因为 JavaScript 对象的键总是字符串，所以 <code>obj[0]</code> 总是和 <code>obj[&quot;0&quot;&quot;]</code> 是一样的。</p><p><code>keyof</code> 类型和映射类型一起使用时会非常有用。</p>`,7),e=[l];function t(c,r,y,B,D,i){return n(),a("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
