import{o as y,c as D,C as c,d as J,a5 as gs,I as S,e as g,D as G,_ as U,u as z,b as bs,q as ls,w as ws,F as T,R as L,G as $,t as C,a as O,y as ds,S as ps,U as rs,J as vs,n as _s,Q as os,a6 as ks,a7 as js,a8 as Ss,a9 as Ts,aa as $s,ab as Ms,ac as Hs,ad as Zs,ae as Rs,af as qs,M as Os,j as Vs,s as Is,ag as Ls,ah as Ps,ai as Js,aj as Ws}from"./chunks/framework.c7ac9774.js";import{u as Ns,a as Ys,V as Gs,_ as Us,b as zs,c as Xs,t as Ks}from"./chunks/theme.310c37e2.js";function Qs(l,o){return y(),D("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor","aria-hidden":"true","data-slot":"icon"},[c("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z"})])}function cs(l,o){return y(),D("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor","aria-hidden":"true","data-slot":"icon"},[c("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5"})])}function sn(l,o){return y(),D("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor","aria-hidden":"true","data-slot":"icon"},[c("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z"})])}function nn(l,o){return y(),D("svg",{xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor","aria-hidden":"true","data-slot":"icon"},[c("path",{"stroke-linecap":"round","stroke-linejoin":"round",d:"M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z"})])}const ts=JSON.parse('[{"title":"iOS17 应用内主题切换 ｜ Xcode 15","cover":{"image":"/vp-blog/covers/in-app-theme-change.png"},"url":"/docs/in-app-theme-change.html","excerpt":"","date":{"time":1707277648000,"string":"2024-02-07 11:47:28"},"frontmatter":{"title":"iOS17 应用内主题切换 ｜ Xcode 15","date":"2024-02-07T03:47:28.000Z","tags":["SwiftUI"],"layout":"post","cover":{"image":"/vp-blog/covers/in-app-theme-change.png"}}},{"title":"iOS17 Apple Watch 风格的列表 ｜ Xcode 15","cover":{"image":"/vp-blog/covers/watchLikeList.jpg"},"url":"/docs/iOS17AppleWatch列表风格.html","excerpt":"","date":{"time":1707021171000,"string":"2024-02-04 12:32:51"},"frontmatter":{"title":"iOS17 Apple Watch 风格的列表 ｜ Xcode 15","date":"2024-02-04T04:32:51.000Z","tags":["SwiftUI"],"layout":"post","cover":{"image":"/vp-blog/covers/watchLikeList.jpg"}}},{"title":"iOS17 闪烁效果 ｜ Xcode 15","cover":{"image":"/vp-blog/covers/shimmer.png"},"url":"/docs/iOS17闪烁效果.html","excerpt":"","date":{"time":1706933169000,"string":"2024-02-03 12:06:09"},"frontmatter":{"title":"iOS17 闪烁效果 ｜ Xcode 15","date":"2024-02-03T04:06:09.000Z","tags":["SwiftUI"],"layout":"post","cover":{"image":"/vp-blog/covers/shimmer.png"}}},{"title":"判断数组各种方式的优劣","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/判断数组.html","excerpt":"","date":{"time":1701854135000,"string":"2023-12-06 17:15:35"},"frontmatter":{"title":"判断数组各种方式的优劣","date":"2023-12-06T09:15:35.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"不要轻易给出你的通讯录权限","cover":{"image":"/vp-blog/covers/reverse-cheat.jpeg"},"url":"/docs/不要轻易给出通讯录权限.html","excerpt":"","date":{"time":1701682925000,"string":"2023-12-04 17:42:05"},"frontmatter":{"title":"不要轻易给出你的通讯录权限","date":"2023-12-04T09:42:05.000Z","tags":["iOS","Swift"],"layout":"post","cover":{"image":"/vp-blog/covers/reverse-cheat.jpeg"}}},{"title":"singleflight 的使用","cover":{"image":"/vp-blog/covers/go.png"},"url":"/docs/singleflight的使用.html","excerpt":"","date":{"time":1696931410000,"string":"2023-10-10 17:50:10"},"frontmatter":{"title":"singleflight 的使用","date":"2023-10-10T09:50:10.000Z","tags":["go"],"layout":"post","cover":{"image":"/vp-blog/covers/go.png"}}},{"title":"记一次前端构建速度优化","cover":{"image":"/vp-blog/covers/webpack.jpg"},"url":"/docs/记一次前端构建速度优化.html","excerpt":"","date":{"time":1696817335000,"string":"2023-10-09 10:08:55"},"frontmatter":{"title":"记一次前端构建速度优化","date":"2023-10-09T02:08:55.000Z","tags":["webpack"],"layout":"post","cover":{"image":"/vp-blog/covers/webpack.jpg"}}},{"title":"“向前选择器“修改步骤条样式","description":":has 选择器","cover":{"image":"/vp-blog/covers/css.jpeg"},"url":"/docs/向前选择器修改步骤条样式.html","excerpt":"","date":{"time":1690678313000,"string":"2023-07-30 08:51:53"},"frontmatter":{"title":"“向前选择器“修改步骤条样式","description":":has 选择器","date":"2023-07-30T00:51:53.000Z","tags":["CSS"],"layout":"post","cover":{"image":"/vp-blog/covers/css.jpeg"}}},{"title":"解决智力问题","description":"力扣 709","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/lc2140解决智力问题.html","excerpt":"","date":{"time":1689817764000,"string":"2023-07-20 09:49:24"},"frontmatter":{"title":"解决智力问题","description":"力扣 709","date":"2023-07-20T01:49:24.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"在 README 放置 Action 和 Codecov 徽标","description":"Action 和 Codecov 徽标获取方法","cover":{"image":"https://images.unsplash.com/photo-1689747707552-950ab35460cb?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2671&q=80"},"url":"/docs/在README放置ActionCodecov徽标.html","excerpt":"","date":{"time":1689758801000,"string":"2023-07-19 17:26:41"},"frontmatter":{"title":"在 README 放置 Action 和 Codecov 徽标","description":"Action 和 Codecov 徽标获取方法","date":"2023-07-19T09:26:41.000Z","tags":["CI/CD"],"layout":"post","cover":{"image":"https://images.unsplash.com/photo-1689747707552-950ab35460cb?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2671&q=80"}}},{"title":"搭建 npm 私服","description":"解决一个几年前占硬盘的问题","cover":{"image":"/vp-blog/covers/npm.webp"},"url":"/docs/posts/搭建npm私服.html","excerpt":"","date":{"time":1689127851000,"string":"2023-07-12 10:10:51"},"frontmatter":{"title":"搭建 npm 私服","description":"解决一个几年前占硬盘的问题","date":"2023-07-12T02:10:51.000Z","tags":["npm","Docker"],"layout":"post","cover":{"image":"/vp-blog/covers/npm.webp"}}},{"title":"Tailwind 动态样式不生效","description":"Tailwind 小技巧","cover":{"image":"/vp-blog/covers/tailwind.jpeg"},"url":"/docs/posts/tailwind动态样式不生效.html","excerpt":"","date":{"time":1688777043000,"string":"2023-07-08 08:44:03"},"frontmatter":{"title":"Tailwind 动态样式不生效","description":"Tailwind 小技巧","date":"2023-07-08T00:44:03.000Z","tags":["CSS","Tailwind CSS"],"layout":"post","cover":{"image":"/vp-blog/covers/tailwind.jpeg"}}},{"title":"解决 Tailwind 样式冲突","description":"Tailwind 小技巧","cover":{"image":"/vp-blog/covers/tailwind.jpeg"},"url":"/docs/posts/tailwind样式冲突.html","excerpt":"","date":{"time":1688736591000,"string":"2023-07-07 21:29:51"},"frontmatter":{"title":"解决 Tailwind 样式冲突","description":"Tailwind 小技巧","date":"2023-07-07T13:29:51.000Z","tags":["CSS","Tailwind CSS"],"layout":"post","cover":{"image":"/vp-blog/covers/tailwind.jpeg"}}},{"title":"问卷实战项目截图","description":"问卷芯","cover":{"image":"https://images.unsplash.com/photo-1661956602944-249bcd04b63f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2670&q=80"},"url":"/docs/posts/问卷实战项目截图.html","excerpt":"","date":{"time":1688632411000,"string":"2023-07-06 16:33:31"},"frontmatter":{"title":"问卷实战项目截图","description":"问卷芯","date":"2023-07-06T08:33:31.000Z","tags":["项目"],"layout":"post","cover":{"image":"https://images.unsplash.com/photo-1661956602944-249bcd04b63f?ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2670&q=80"}}},{"title":"多了种声明变量的方式？","description":"Typescript 5.2 的 using","cover":{"image":"/vp-blog/covers/ts-using.webp"},"url":"/docs/posts/新关键字using.html","excerpt":"","date":{"time":1688629585000,"string":"2023-07-06 15:46:25"},"frontmatter":{"title":"多了种声明变量的方式？","description":"Typescript 5.2 的 using","date":"2023-07-06T07:46:25.000Z","tags":["Typescript"],"layout":"post","cover":{"image":"/vp-blog/covers/ts-using.webp"}}},{"title":"字符串插值","description":"了却一年前没解决的问题","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/posts/字符串插值.html","excerpt":"","date":{"time":1688458006000,"string":"2023-07-04 16:06:46"},"frontmatter":{"title":"字符串插值","description":"了却一年前没解决的问题","date":"2023-07-04T08:06:46.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"Hello Kafka","description":"快速体验 Kafka 的使用","cover":{"image":"/vp-blog/covers/go.png"},"url":"/docs/posts/kafka.html","excerpt":"","date":{"time":1688273870000,"string":"2023-07-02 12:57:50"},"frontmatter":{"title":"Hello Kafka","description":"快速体验 Kafka 的使用","date":"2023-07-02T04:57:50.000Z","tags":["go","Kafka"],"layout":"post","cover":{"image":"/vp-blog/covers/go.png"}}},{"title":"命令行播放坤坤","description":"只因你太美","cover":{"image":"/vp-blog/covers/ikun.jpg"},"url":"/docs/posts/命令行播放坤坤.html","excerpt":"","date":{"time":1687924578000,"string":"2023-06-28 11:56:18"},"frontmatter":{"title":"命令行播放坤坤","description":"只因你太美","date":"2023-06-28T03:56:18.000Z","tags":["Node.js","python"],"layout":"post","cover":{"image":"/vp-blog/covers/ikun.jpg"}}},{"title":"探索面包屑正确的生成方式","description":"一直被忽略的小细节","cover":{"image":"/vp-blog/covers/vue.jpeg"},"url":"/docs/posts/探索面包屑正确的生成方式.html","excerpt":"","date":{"time":1687244101000,"string":"2023-06-20 14:55:01"},"frontmatter":{"title":"探索面包屑正确的生成方式","description":"一直被忽略的小细节","date":"2023-06-20T06:55:01.000Z","tags":["Vue"],"layout":"post","cover":{"image":"/vp-blog/covers/vue.jpeg"}}},{"title":"拖拽交互","description":"拖拽交互示例","cover":{"image":"/vp-blog/covers/vue.jpeg"},"url":"/docs/posts/拖拽交互.html","excerpt":"","date":{"time":1686639360000,"string":"2023-06-13 14:56:00"},"frontmatter":{"title":"拖拽交互","description":"拖拽交互示例","date":"2023-06-13T06:56:00.000Z","tags":["Vue"],"layout":"post","cover":{"image":"/vp-blog/covers/vue.jpeg"}}},{"title":"不规则曲线动画","cover":{"image":"/vp-blog/covers/css.jpeg"},"url":"/docs/posts/不规则曲线动画.html","excerpt":"","date":{"time":1686553434000,"string":"2023-06-12 15:03:54"},"frontmatter":{"title":"不规则曲线动画","date":"2023-06-12T07:03:54.000Z","tags":["CSS"],"layout":"post","cover":{"image":"/vp-blog/covers/css.jpeg"}}},{"title":"嵌套数组生成器","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2649.html","excerpt":"","date":{"time":1686388571000,"string":"2023-06-10 17:16:11"},"frontmatter":{"title":"嵌套数组生成器","description":"JavaScript 14 天编程挑战","date":"2023-06-10T09:16:11.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"编写 brainfuck 解释器","description":"使用 Node 编写 BF 解释器","cover":{"image":"/vp-blog/covers/nodejs.png"},"url":"/docs/posts/编写brainfuck解释器.html","excerpt":"<h2 id=\\"代码\\" tabindex=\\"-1\\">代码 <a class=\\"header-anchor\\" href=\\"#代码\\" aria-label=\\"Permalink to &quot;代码&quot;\\">&ZeroWidthSpace;</a></h2>\\n<div class=\\"vp-code-group\\"><div class=\\"tabs\\"><input type=\\"radio\\" name=\\"group-VbTT_\\" id=\\"tab-4t5f_ti\\" checked=\\"checked\\"><label for=\\"tab-4t5f_ti\\">index.mjs</label><input type=\\"radio\\" name=\\"group-VbTT_\\" id=\\"tab--HU0u1b\\" ><label for=\\"tab--HU0u1b\\">opcode.mjs</label><input type=\\"radio\\" name=\\"group-VbTT_\\" id=\\"tab-UQi5g0w\\" ><label for=\\"tab-UQi5g0w\\">Interpreter.mjs</label><input type=\\"radio\\" name=\\"group-VbTT_\\" id=\\"tab-HRC_viZ\\" ><label for=\\"tab-HRC_viZ\\">util.mjs</label></div><div class=\\"blocks\\">\\n<div class=\\"language-js active line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">js</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> fs </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">node:fs/promises</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">Code</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">./opcode.mjs</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #BABED8\\">Interpreter</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">./Interpreter.mjs</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> args </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> process</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">argv</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> target </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> args[</span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #BABED8\\">]</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> file </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">await</span><span style=\\"color: #BABED8\\"> fs</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">readFile</span><span style=\\"color: #BABED8\\">(target)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #BABED8\\"> code </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> Code</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">shared</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">from</span><span style=\\"color: #BABED8\\">(file)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> interpreter </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">new</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #82AAFF\\">Interpreter</span><span style=\\"color: #BABED8\\">()</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">interpreter</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">run</span><span style=\\"color: #BABED8\\">(code)</span><span style=\\"color: #89DDFF\\">;</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br><span class=\\"line-number\\">9</span><br><span class=\\"line-number\\">10</span><br><span class=\\"line-number\\">11</span><br><span class=\\"line-number\\">12</span><br><span class=\\"line-number\\">13</span><br><span class=\\"line-number\\">14</span><br></div></div><div class=\\"language-js line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">js</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> fs </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">node:fs</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">stdin</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">stdout</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">node:process</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #BABED8\\">readBytes</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">./util.mjs</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> SHR </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x3E</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// &gt; 的 charCode</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> SHL </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x3C</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// &lt;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> ADD </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x2B</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// +</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> SUB </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x2D</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// -</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> PUTCHAR </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x2E</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// .</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> GETCHAR </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x2C</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// ,</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> LB </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x5B</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// [</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> RB </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F78C6C\\">0x5D</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// ]</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">class</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #FFCB6B\\">Code</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #F07178\\">instrs</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> []</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #F07178\\">jtable</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">new</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F07178\\">Map</span><span style=\\"color: #BABED8\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #C792EA\\">static</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F07178\\">shared</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">new</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #F07178\\">Code</span><span style=\\"color: #BABED8\\">()</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #C792EA\\">constructor</span><span style=\\"color: #89DDFF\\">()</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #F07178\\">from</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #BABED8; font-style: italic\\">data</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">dict</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">new</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #82AAFF\\">Set</span><span style=\\"color: #F07178\\">([</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">SHR</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">SHL</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">ADD</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">SUB</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">PUTCHAR</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">GETCHAR</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">LB</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">RB</span><span style=\\"color: #89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    ])</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">instrs</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">data</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">filter</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8; font-style: italic\\">code</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #C792EA\\">=&gt;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #89DDFF\\">!</span><span style=\\"color: #BABED8\\">dict</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">has</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #F07178\\">)) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">        </span><span style=\\"color: #676E95; font-style: italic\\">// 跳过不支持的操作服或空格</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">return</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #FF9CAC\\">false</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">return</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #FF9CAC\\">true</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> []</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF; font-style: italic\\">for</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #89DDFF\\">&lt;this.</span><span style=\\"color: #BABED8\\">instrs</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">length</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #89DDFF\\">++</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">instrs</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\">]</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">===</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">LB</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">push</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">===</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">RB</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">j</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">pop</span><span style=\\"color: #F07178\\">()</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">jtable</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">set</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">j</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">jtable</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">set</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">j</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF; font-style: italic\\">return</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">this;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br><span class=\\"line-number\\">9</span><br><span class=\\"line-number\\">10</span><br><span class=\\"line-number\\">11</span><br><span class=\\"line-number\\">12</span><br><span class=\\"line-number\\">13</span><br><span class=\\"line-number\\">14</span><br><span class=\\"line-number\\">15</span><br><span class=\\"line-number\\">16</span><br><span class=\\"line-number\\">17</span><br><span class=\\"line-number\\">18</span><br><span class=\\"line-number\\">19</span><br><span class=\\"line-number\\">20</span><br><span class=\\"line-number\\">21</span><br><span class=\\"line-number\\">22</span><br><span class=\\"line-number\\">23</span><br><span class=\\"line-number\\">24</span><br><span class=\\"line-number\\">25</span><br><span class=\\"line-number\\">26</span><br><span class=\\"line-number\\">27</span><br><span class=\\"line-number\\">28</span><br><span class=\\"line-number\\">29</span><br><span class=\\"line-number\\">30</span><br><span class=\\"line-number\\">31</span><br><span class=\\"line-number\\">32</span><br><span class=\\"line-number\\">33</span><br><span class=\\"line-number\\">34</span><br><span class=\\"line-number\\">35</span><br><span class=\\"line-number\\">36</span><br><span class=\\"line-number\\">37</span><br><span class=\\"line-number\\">38</span><br><span class=\\"line-number\\">39</span><br><span class=\\"line-number\\">40</span><br><span class=\\"line-number\\">41</span><br><span class=\\"line-number\\">42</span><br><span class=\\"line-number\\">43</span><br><span class=\\"line-number\\">44</span><br><span class=\\"line-number\\">45</span><br><span class=\\"line-number\\">46</span><br><span class=\\"line-number\\">47</span><br><span class=\\"line-number\\">48</span><br><span class=\\"line-number\\">49</span><br><span class=\\"line-number\\">50</span><br><span class=\\"line-number\\">51</span><br><span class=\\"line-number\\">52</span><br><span class=\\"line-number\\">53</span><br><span class=\\"line-number\\">54</span><br><span class=\\"line-number\\">55</span><br><span class=\\"line-number\\">56</span><br><span class=\\"line-number\\">57</span><br><span class=\\"line-number\\">58</span><br><span class=\\"line-number\\">59</span><br><span class=\\"line-number\\">60</span><br><span class=\\"line-number\\">61</span><br><span class=\\"line-number\\">62</span><br><span class=\\"line-number\\">63</span><br><span class=\\"line-number\\">64</span><br><span class=\\"line-number\\">65</span><br><span class=\\"line-number\\">66</span><br><span class=\\"line-number\\">67</span><br></div></div><div class=\\"language-js line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">js</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #BABED8\\">stdin</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">stdout</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">node:process</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #BABED8\\">readBytes</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">./util.mjs</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #BABED8\\">ADD</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">GETCHAR</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">LB</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">PUTCHAR</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">RB</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">SHL</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">SHR</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">SUB</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">./opcode.mjs</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">class</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #FFCB6B\\">Interpreter</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #F07178\\">stack</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> [</span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #BABED8\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #C792EA\\">constructor</span><span style=\\"color: #89DDFF\\">()</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #F07178\\">run</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #BABED8; font-style: italic\\">code</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">codeLen</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">instrs</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">length</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF; font-style: italic\\">while</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #FF9CAC\\">true</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">&gt;=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">codeLen</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// 代码已结束</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">c</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">instrs</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #676E95; font-style: italic\\">// 过滤后的代码数组</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">switch</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">c</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">SHR</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">+=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">===</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">length</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// 纸带不够了</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">            </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">push</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">SHL</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">!==</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">            </span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">-=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">ADD</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">+</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #F07178\\">)  </span><span style=\\"color: #89DDFF\\">%</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">256</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">SUB</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">tmp</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">-</span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">tmp</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">&lt;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">?</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">tmp</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">+</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">256</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">tmp</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">PUTCHAR</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #BABED8\\">stdout</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">write</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">Buffer</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">from</span><span style=\\"color: #F07178\\">([</span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">]])</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">utf-8</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">GETCHAR</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">buf</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #82AAFF\\">readBytes</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">stdin</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">fd</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">buf</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #F07178\\">]</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">LB</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">===</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0x00</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">            </span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">jtable</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">get</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">case</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">RB</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #89DDFF\\">this.</span><span style=\\"color: #BABED8\\">stack</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #BABED8\\">stackPointer</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">!==</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0x00</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">            </span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">jtable</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">get</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">          </span><span style=\\"color: #89DDFF; font-style: italic\\">break</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">default</span><span style=\\"color: #89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">        </span><span style=\\"color: #676E95; font-style: italic\\">// never</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">      </span><span style=\\"color: #676E95; font-style: italic\\">// console.log(String.fromCharCode(c), this.stack);</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">programCount</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">+=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">1</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #676E95; font-style: italic\\">// 读入下一个指令</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br><span class=\\"line-number\\">9</span><br><span class=\\"line-number\\">10</span><br><span class=\\"line-number\\">11</span><br><span class=\\"line-number\\">12</span><br><span class=\\"line-number\\">13</span><br><span class=\\"line-number\\">14</span><br><span class=\\"line-number\\">15</span><br><span class=\\"line-number\\">16</span><br><span class=\\"line-number\\">17</span><br><span class=\\"line-number\\">18</span><br><span class=\\"line-number\\">19</span><br><span class=\\"line-number\\">20</span><br><span class=\\"line-number\\">21</span><br><span class=\\"line-number\\">22</span><br><span class=\\"line-number\\">23</span><br><span class=\\"line-number\\">24</span><br><span class=\\"line-number\\">25</span><br><span class=\\"line-number\\">26</span><br><span class=\\"line-number\\">27</span><br><span class=\\"line-number\\">28</span><br><span class=\\"line-number\\">29</span><br><span class=\\"line-number\\">30</span><br><span class=\\"line-number\\">31</span><br><span class=\\"line-number\\">32</span><br><span class=\\"line-number\\">33</span><br><span class=\\"line-number\\">34</span><br><span class=\\"line-number\\">35</span><br><span class=\\"line-number\\">36</span><br><span class=\\"line-number\\">37</span><br><span class=\\"line-number\\">38</span><br><span class=\\"line-number\\">39</span><br><span class=\\"line-number\\">40</span><br><span class=\\"line-number\\">41</span><br><span class=\\"line-number\\">42</span><br><span class=\\"line-number\\">43</span><br><span class=\\"line-number\\">44</span><br><span class=\\"line-number\\">45</span><br><span class=\\"line-number\\">46</span><br><span class=\\"line-number\\">47</span><br><span class=\\"line-number\\">48</span><br><span class=\\"line-number\\">49</span><br><span class=\\"line-number\\">50</span><br><span class=\\"line-number\\">51</span><br><span class=\\"line-number\\">52</span><br><span class=\\"line-number\\">53</span><br><span class=\\"line-number\\">54</span><br><span class=\\"line-number\\">55</span><br><span class=\\"line-number\\">56</span><br><span class=\\"line-number\\">57</span><br><span class=\\"line-number\\">58</span><br><span class=\\"line-number\\">59</span><br><span class=\\"line-number\\">60</span><br><span class=\\"line-number\\">61</span><br><span class=\\"line-number\\">62</span><br><span class=\\"line-number\\">63</span><br><span class=\\"line-number\\">64</span><br><span class=\\"line-number\\">65</span><br><span class=\\"line-number\\">66</span><br></div></div><div class=\\"language-js line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">js</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> fs </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">node:fs</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">export</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> readBytes </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #BABED8; font-style: italic\\">fd</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #BABED8; font-style: italic\\">count</span><span style=\\"color: #89DDFF\\">)</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">=&gt;</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">buffer</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">Buffer</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">allocUnsafe</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">count</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF; font-style: italic\\">for</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">&lt;</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">count</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #C792EA\\">let</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">result</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF; font-style: italic\\">try</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #BABED8\\">result</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">fs</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">readSync</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">fd</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">buffer</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">count</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">-</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">catch</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">error</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">error</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">code</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">===</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">EAGAIN</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F07178\\">  </span><span style=\\"color: #676E95; font-style: italic\\">// when there is nothing to read at the current time (Unix)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">        </span><span style=\\"color: #676E95; font-style: italic\\">//TODO: it is good to slow down loop here or do other tasks in meantime, e.g. async sleep</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF; font-style: italic\\">continue</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">throw</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">error</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF; font-style: italic\\">if</span><span style=\\"color: #F07178\\"> (</span><span style=\\"color: #BABED8\\">result</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">===</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #F78C6C\\">0</span><span style=\\"color: #F07178\\">) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF; font-style: italic\\">throw</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">new</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #82AAFF\\">Error</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">Input stream reading error.</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #F07178\\">)</span><span style=\\"color: #89DDFF\\">;</span><span style=\\"color: #F07178\\">  </span><span style=\\"color: #676E95; font-style: italic\\">// consider to use your own solution on this case</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">    </span><span style=\\"color: #BABED8\\">i</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">+=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">result</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF; font-style: italic\\">return</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">buffer</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">};</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br><span class=\\"line-number\\">9</span><br><span class=\\"line-number\\">10</span><br><span class=\\"line-number\\">11</span><br><span class=\\"line-number\\">12</span><br><span class=\\"line-number\\">13</span><br><span class=\\"line-number\\">14</span><br><span class=\\"line-number\\">15</span><br><span class=\\"line-number\\">16</span><br><span class=\\"line-number\\">17</span><br><span class=\\"line-number\\">18</span><br><span class=\\"line-number\\">19</span><br><span class=\\"line-number\\">20</span><br><span class=\\"line-number\\">21</span><br><span class=\\"line-number\\">22</span><br></div></div></div></div>\\n<p>util.mjs 是从命令行读入用户输入的函数，在 brainfuck 中，一次只能处理长度为 1 的输入，所以我们在后面使用该函数时，<code>count</code> 参数传 <code>1</code>。</p>\\n<p>在 opcode.mjs 中，我们使用常量的方式，定义了 8 个 BF 中支持的操作，由于以 <code>readFile</code> 读入时，每个操作符都被转成二进制的数组，每一位的值刚好是其 chartCode 的值，所以我们将其 charCode 作为常量的值。</p>\\n<p>由于 BF 中的 <code>[</code>, <code>]</code> 可能会进行代码跳转，类似于括号匹配的问题，所以我们在预处理代码时使用栈处理出一个哈希表，方便代码执行时，进行快速跳转。</p>\\n<p>代码的执行，我们使用一个无限循环，有一个 <code>programCount</code> 执行代码执行的位置，特别地，当它执行代码的最后时，我们跳出循环表示代码执行结束。</p>\\n<p>还有一个栈指针，指向我们模拟的内存上的位置。</p>\\n<p>接着按照 wiki 的定义，我们把 BF 的八个操作符一一实现。</p>\\n<p>在执行加法和减法操作时，我们需要模拟无符号 8 位会溢出的情况。</p>\\n<h2 id=\\"执行-bf-代码\\" tabindex=\\"-1\\">执行 BF 代码 <a class=\\"header-anchor\\" href=\\"#执行-bf-代码\\" aria-label=\\"Permalink to &quot;执行 BF 代码&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>我们可以以如下形式执行我们的 BF 代码：</p>\\n<div class=\\"language-bash line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">bash</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #FFCB6B\\">node</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C3E88D\\">index.mjs</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C3E88D\\">./res/hello_world.bf</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br></div></div><h3 id=\\"hello-world\\" tabindex=\\"-1\\">Hello World <a class=\\"header-anchor\\" href=\\"#hello-world\\" aria-label=\\"Permalink to &quot;Hello World&quot;\\">&ZeroWidthSpace;</a></h3>\\n<div class=\\"language-txt line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">txt</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #babed8\\">++++++++++[&gt;+++++++&gt;++++++++++&gt;+++&gt;+&lt;&lt;&lt;&lt;-]&gt;++.&gt;+.+++++++..+++.&gt;++.&lt;&lt;+++++++++++++++.&gt;.+++.</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br></div></div>","date":{"time":1686094320000,"string":"2023-06-07 07:32:00"},"frontmatter":{"title":"编写 brainfuck 解释器","description":"使用 Node 编写 BF 解释器","date":"2023-06-06T23:32:00.000Z","tags":["Node.js"],"layout":"post","cover":{"image":"/vp-blog/covers/nodejs.png"}}},{"title":"了解 DNS 查询过程","description":"浏览器输入域名后的第一步","cover":{"image":"https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2670&q=80"},"url":"/docs/posts/DNS.html","excerpt":"","date":{"time":1686016766000,"string":"2023-06-06 09:59:26"},"frontmatter":{"title":"了解 DNS 查询过程","description":"浏览器输入域名后的第一步","date":"2023-06-06T01:59:26.000Z","tags":["计算机"],"layout":"post","cover":{"image":"https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2670&q=80"}}},{"title":"wire 使用示例","description":"简化对象创建流程","cover":{"image":"/vp-blog/covers/go.png"},"url":"/docs/posts/wire.html","excerpt":"","date":{"time":1685934301000,"string":"2023-06-05 11:05:01"},"frontmatter":{"title":"wire 使用示例","description":"简化对象创建流程","date":"2023-06-05T03:05:01.000Z","tags":["go"],"layout":"post","cover":{"image":"/vp-blog/covers/go.png"}}},{"title":"学习 React Hooks（五）","description":"useMemo, useCallback, useContext","cover":{"image":"/vp-blog/covers/react.jpeg"},"url":"/docs/posts/learn-hook-5.html","excerpt":"","date":{"time":1685929351000,"string":"2023-06-05 09:42:31"},"frontmatter":{"title":"学习 React Hooks（五）","description":"useMemo, useCallback, useContext","date":"2023-06-05T01:42:31.000Z","tags":["React"],"layout":"post","cover":{"image":"/vp-blog/covers/react.jpeg"}}},{"title":"学习 React Hooks（四）","description":"useDebugValue，useDeferredValue","cover":{"image":"/vp-blog/covers/react.jpeg"},"url":"/docs/posts/learn-hook-4.html","excerpt":"","date":{"time":1685851696000,"string":"2023-06-04 12:08:16"},"frontmatter":{"title":"学习 React Hooks（四）","description":"useDebugValue，useDeferredValue","date":"2023-06-04T04:08:16.000Z","tags":["React"],"layout":"post","cover":{"image":"/vp-blog/covers/react.jpeg"}}},{"title":"学习 React Hooks（三）","description":"useEffect, useLayoutEffect, useInsertionEffect","cover":{"image":"/vp-blog/covers/react.jpeg"},"url":"/docs/posts/learn-hook-3.html","excerpt":"","date":{"time":1685675793000,"string":"2023-06-02 11:16:33"},"frontmatter":{"title":"学习 React Hooks（三）","description":"useEffect, useLayoutEffect, useInsertionEffect","date":"2023-06-02T03:16:33.000Z","tags":["React"],"layout":"post","cover":{"image":"/vp-blog/covers/react.jpeg"}}},{"title":"学习 React Hooks（二）","description":"useState, useReducer, useRef","cover":{"image":"/vp-blog/covers/react.jpeg"},"url":"/docs/posts/learn-hook-2.html","excerpt":"","date":{"time":1685669653000,"string":"2023-06-02 09:34:13"},"frontmatter":{"title":"学习 React Hooks（二）","description":"useState, useReducer, useRef","date":"2023-06-02T01:34:13.000Z","tags":["React"],"layout":"post","cover":{"image":"/vp-blog/covers/react.jpeg"}}},{"title":"学习 React Hooks（一）","description":"useId, useSyncExternalStore, useTransition","cover":{"image":"/vp-blog/covers/react.jpeg"},"url":"/docs/posts/learn-hook-1.html","excerpt":"","date":{"time":1685594067000,"string":"2023-06-01 12:34:27"},"frontmatter":{"title":"学习 React Hooks（一）","description":"useId, useSyncExternalStore, useTransition","date":"2023-06-01T04:34:27.000Z","tags":["React"],"layout":"post","cover":{"image":"/vp-blog/covers/react.jpeg"}}},{"title":"规范项目的 git commit message","description":"和 vue3 源码学检查 git commit message","cover":{"image":"/vp-blog/covers/git.png"},"url":"/docs/posts/和vue3学检查提交消息.html","excerpt":"<p>在我的 <a href=\\"https://github.com/shenxiang11/vue-starter\\" target=\\"_blank\\" rel=\\"noreferrer\\">vue-start</a> 快速启动项目中，我学习 vue 源码的规范 git commit message 的方式，添加了校验的功能。</p>\\n<p>简单做一下集成的记录。</p>\\n<h2 id=\\"step-1-安装-simple-git-hooks\\" tabindex=\\"-1\\">Step 1: 安装 simple-git-hooks <a class=\\"header-anchor\\" href=\\"#step-1-安装-simple-git-hooks\\" aria-label=\\"Permalink to &quot;Step 1: 安装 simple-git-hooks&quot;\\">&ZeroWidthSpace;</a></h2>\\n<div class=\\"language-shell line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #FFCB6B\\">npm</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C3E88D\\">install</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C3E88D\\">simple-git-hooks</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C3E88D\\">--save-dev</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br></div></div><p>还有其他类似的 git hooks 工具，如 husky 等。</p>\\n<h2 id=\\"step-2-配置-package-json\\" tabindex=\\"-1\\">Step 2: 配置 package.json <a class=\\"header-anchor\\" href=\\"#step-2-配置-package-json\\" aria-label=\\"Permalink to &quot;Step 2: 配置 package.json&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>我们添加 simple-git-hooks 所需要的配置。</p>\\n<div class=\\"language-json line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">json</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C792EA\\">scripts</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">    </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #FFCB6B\\">postinstall</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">simple-git-hooks</span><span style=\\"color: #89DDFF\\">&quot;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #89DDFF\\">},</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C792EA\\">simple-git-hooks</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">    </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #FFCB6B\\">commit-msg</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #89DDFF\\">:</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">node scripts/verifyCommit.mjs</span><span style=\\"color: #89DDFF\\">&quot;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br></div></div><h2 id=\\"step-3-编写检测脚本\\" tabindex=\\"-1\\">Step 3: 编写检测脚本 <a class=\\"header-anchor\\" href=\\"#step-3-编写检测脚本\\" aria-label=\\"Permalink to &quot;Step 3: 编写检测脚本&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>这里我们直接贴出 vue3 源码里的脚本，我们可以按需自己定制。</p>\\n<div class=\\"language-javascript line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">javascript</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #676E95; font-style: italic\\">// @ts-check</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> chalk </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">chalk</span><span style=\\"color: #89DDFF\\">&#39;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">readFileSync</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">fs</span><span style=\\"color: #89DDFF\\">&#39;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF; font-style: italic\\">import</span><span style=\\"color: #BABED8\\"> path </span><span style=\\"color: #89DDFF; font-style: italic\\">from</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">path</span><span style=\\"color: #89DDFF\\">&#39;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> msgPath </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> path</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">resolve</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">.git/COMMIT_EDITMSG</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> msg </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #82AAFF\\">readFileSync</span><span style=\\"color: #BABED8\\">(msgPath</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">utf-8</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #BABED8\\">)</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">trim</span><span style=\\"color: #BABED8\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> commitRE </span><span style=\\"color: #89DDFF\\">=</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  </span><span style=\\"color: #89DDFF\\">/</span><span style=\\"color: #89DDFF; font-style: italic\\">^</span><span style=\\"color: #89DDFF\\">(</span><span style=\\"color: #C3E88D\\">revert: </span><span style=\\"color: #89DDFF\\">)?(</span><span style=\\"color: #C3E88D\\">feat</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">fix</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">docs</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">dx</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">style</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">refactor</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">perf</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">test</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">workflow</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">build</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">ci</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">chore</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">types</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">wip</span><span style=\\"color: #89DDFF\\">|</span><span style=\\"color: #C3E88D\\">release</span><span style=\\"color: #89DDFF\\">)(</span><span style=\\"color: #BABED8\\">\\\\(</span><span style=\\"color: #C3E88D\\">.</span><span style=\\"color: #89DDFF\\">+</span><span style=\\"color: #BABED8\\">\\\\)</span><span style=\\"color: #89DDFF\\">)?</span><span style=\\"color: #C3E88D\\">: .</span><span style=\\"color: #89DDFF\\">{1,50}/</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #82AAFF\\">if</span><span style=\\"color: #BABED8\\"> (</span><span style=\\"color: #89DDFF\\">!</span><span style=\\"color: #BABED8\\">commitRE</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">test</span><span style=\\"color: #BABED8\\">(msg)) </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  console.log()</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">  console.error(</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">    </span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF\\">${</span><span style=\\"color: #BABED8\\">chalk</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">bgRed</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">white</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #F07178\\"> ERROR </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #BABED8\\">)</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">${</span><span style=\\"color: #BABED8\\">chalk</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">red</span><span style=\\"color: #BABED8\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">      </span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">invalid commit message format.</span><span style=\\"color: #89DDFF\\">`</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">    )</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\">\\\\n\\\\n</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\"> +</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      chalk.red(</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">        </span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">  Proper commit message format is required for automated changelog generation. Examples:</span><span style=\\"color: #BABED8\\">\\\\n\\\\n</span><span style=\\"color: #89DDFF\\">`</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      ) +</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">${</span><span style=\\"color: #BABED8\\">chalk</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">green</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">feat(compiler): add &#39;comments&#39; option</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #BABED8\\">)</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\">\\\\n</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\"> +</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      </span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">    </span><span style=\\"color: #89DDFF\\">${</span><span style=\\"color: #BABED8\\">chalk</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">green</span><span style=\\"color: #BABED8\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">        </span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">fix(v-model): handle events on blur (close #28)</span><span style=\\"color: #89DDFF\\">`</span></span>\\n<span class=\\"line\\"><span style=\\"color: #BABED8\\">      )</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #BABED8\\">\\\\n\\\\n</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\"> +</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">      chalk.red(</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">  See .github/commit-convention.md for more details.</span><span style=\\"color: #BABED8\\">\\\\n</span><span style=\\"color: #89DDFF\\">`</span><span style=\\"color: #F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  )</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  process.exit(1)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">}</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br><span class=\\"line-number\\">9</span><br><span class=\\"line-number\\">10</span><br><span class=\\"line-number\\">11</span><br><span class=\\"line-number\\">12</span><br><span class=\\"line-number\\">13</span><br><span class=\\"line-number\\">14</span><br><span class=\\"line-number\\">15</span><br><span class=\\"line-number\\">16</span><br><span class=\\"line-number\\">17</span><br><span class=\\"line-number\\">18</span><br><span class=\\"line-number\\">19</span><br><span class=\\"line-number\\">20</span><br><span class=\\"line-number\\">21</span><br><span class=\\"line-number\\">22</span><br><span class=\\"line-number\\">23</span><br><span class=\\"line-number\\">24</span><br><span class=\\"line-number\\">25</span><br><span class=\\"line-number\\">26</span><br><span class=\\"line-number\\">27</span><br><span class=\\"line-number\\">28</span><br></div></div><p>奇怪的是 vue3 此文件名后缀是 js，但是使用了 <code>import</code> 语句，这在我的环境下是不行的，我们可以将其改为 <code>mjs</code> 后缀。</p>\\n<h2 id=\\"step-4-设置-hooks\\" tabindex=\\"-1\\">Step 4: 设置 hooks <a class=\\"header-anchor\\" href=\\"#step-4-设置-hooks\\" aria-label=\\"Permalink to &quot;Step 4: 设置 hooks&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>执行脚本，其会为我们在隐藏文件下设置相应的 hooks。</p>\\n<div class=\\"language-shell line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #FFCB6B\\">npx</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C3E88D\\">simple-git-hooks</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br></div></div><h2 id=\\"message-规范解读\\" tabindex=\\"-1\\">message 规范解读 <a class=\\"header-anchor\\" href=\\"#message-规范解读\\" aria-label=\\"Permalink to &quot;message 规范解读&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p><code>?</code> 代表不是很确定且 commitizen 规范中似乎没有。</p>\\n<p>| 名称       | 意义              |\\n|</p>\\n","date":{"time":1685350533000,"string":"2023-05-29 16:55:33"},"frontmatter":{"title":"规范项目的 git commit message","description":"和 vue3 源码学检查 git commit message","date":"2023-05-29T08:55:33.000Z","tags":["git"],"layout":"post","cover":{"image":"/vp-blog/covers/git.png"}}},{"title":"鸡蛋掉落","description":"Leetcode 887 & Leetcode 1884","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/鸡蛋掉落.html","excerpt":"","date":{"time":1685324267000,"string":"2023-05-29 09:37:47"},"frontmatter":{"title":"鸡蛋掉落","description":"Leetcode 887 & Leetcode 1884","date":"2023-05-29T01:37:47.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"DOM Tree 转 Fiber 挑战","description":"了解 React 的 Fiber 是如何从树状结构转换","cover":{"image":"/vp-blog/covers/fiber.png"},"url":"/docs/posts/DOMTree转Fiber挑战.html","excerpt":"","date":{"time":1685023485000,"string":"2023-05-25 22:04:45"},"frontmatter":{"title":"DOM Tree 转 Fiber 挑战","description":"了解 React 的 Fiber 是如何从树状结构转换","date":"2023-05-25T14:04:45.000Z","tags":["React","算法"],"layout":"post","cover":{"image":"/vp-blog/covers/fiber.png"}}},{"title":"实现 react-redux (函数组件版)","description":"实现 provider, useDispatch, useSelector","cover":{"image":"/vp-blog/covers/redux.png"},"url":"/docs/posts/实现react-redux.html","excerpt":"","date":{"time":1684902474000,"string":"2023-05-24 12:27:54"},"frontmatter":{"title":"实现 react-redux (函数组件版)","description":"实现 provider, useDispatch, useSelector","date":"2023-05-24T04:27:54.000Z","tags":["React","Redux"],"layout":"post","cover":{"image":"/vp-blog/covers/redux.png"}}},{"title":"React 里的最小堆","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/posts/学习React里的最小堆.html","excerpt":"","date":{"time":1684804359000,"string":"2023-05-23 09:12:39"},"frontmatter":{"title":"React 里的最小堆","date":"2023-05-23T01:12:39.000Z","tags":["React","算法"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"实现 Redux (四)","description":"实现 combineReducers","cover":{"image":"/vp-blog/covers/redux.png"},"url":"/docs/posts/实现redux-4.html","excerpt":"","date":{"time":1684640204000,"string":"2023-05-21 11:36:44"},"frontmatter":{"title":"实现 Redux (四)","description":"实现 combineReducers","date":"2023-05-21T03:36:44.000Z","tags":["React","Redux"],"layout":"post","cover":{"image":"/vp-blog/covers/redux.png"}}},{"title":"实现 Redux (三)","description":"实现自己的 logger 和 thunk 中间件","cover":{"image":"/vp-blog/covers/redux.png"},"url":"/docs/posts/实现redux-3.html","excerpt":"","date":{"time":1684632202000,"string":"2023-05-21 09:23:22"},"frontmatter":{"title":"实现 Redux (三)","description":"实现自己的 logger 和 thunk 中间件","date":"2023-05-21T01:23:22.000Z","tags":["React","Redux"],"layout":"post","cover":{"image":"/vp-blog/covers/redux.png"}}},{"title":"实现 Redux (二)","description":"添加中间件机制","cover":{"image":"/vp-blog/covers/redux.png"},"url":"/docs/posts/实现Redux-2.html","excerpt":"","date":{"time":1684546087000,"string":"2023-05-20 09:28:07"},"frontmatter":{"title":"实现 Redux (二)","description":"添加中间件机制","date":"2023-05-20T01:28:07.000Z","tags":["React","Redux"],"layout":"post","cover":{"image":"/vp-blog/covers/redux.png"}}},{"title":"实现 Redux (一)","description":"掌握 Redux 的核心实现","cover":{"image":"/vp-blog/covers/redux.png"},"url":"/docs/posts/实现Redux.html","excerpt":"","date":{"time":1684501366000,"string":"2023-05-19 21:02:46"},"frontmatter":{"title":"实现 Redux (一)","description":"掌握 Redux 的核心实现","date":"2023-05-19T13:02:46.000Z","tags":["React","Redux"],"layout":"post","cover":{"image":"/vp-blog/covers/redux.png"}}},{"title":"只允许一次函数调用","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2666.html","excerpt":"","date":{"time":1684476553000,"string":"2023-05-19 14:09:13"},"frontmatter":{"title":"只允许一次函数调用","description":"JavaScript 14 天编程挑战","date":"2023-05-19T06:09:13.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"复合函数","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2629.html","excerpt":"","date":{"time":1684470410000,"string":"2023-05-19 12:26:50"},"frontmatter":{"title":"复合函数","description":"JavaScript 14 天编程挑战","date":"2023-05-19T04:26:50.000Z","tags":["Javascript","Redux"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"数组归约运算","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2626.html","excerpt":"","date":{"time":1684397072000,"string":"2023-05-18 16:04:32"},"frontmatter":{"title":"数组归约运算","description":"JavaScript 14 天编程挑战","date":"2023-05-18T08:04:32.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"过滤数组中的元素","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2634.html","excerpt":"","date":{"time":1684396296000,"string":"2023-05-18 15:51:36"},"frontmatter":{"title":"过滤数组中的元素","description":"JavaScript 14 天编程挑战","date":"2023-05-18T07:51:36.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"Stable Diffusion 体验 AI 画图","description":"分享一点画图的结果","cover":{"image":"https://images.unsplash.com/photo-1677442135703-1787eea5ce01?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3432&q=80"},"url":"/docs/posts/stable-diffusion.html","excerpt":"","date":{"time":1684332905000,"string":"2023-05-17 22:15:05"},"frontmatter":{"title":"Stable Diffusion 体验 AI 画图","description":"分享一点画图的结果","date":"2023-05-17T14:15:05.000Z","tags":["AI"],"layout":"post","cover":{"image":"https://images.unsplash.com/photo-1677442135703-1787eea5ce01?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=3432&q=80"}}},{"title":"计数器 II","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2665.html","excerpt":"","date":{"time":1684315179000,"string":"2023-05-17 17:19:39"},"frontmatter":{"title":"计数器 II","description":"JavaScript 14 天编程挑战","date":"2023-05-17T09:19:39.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"转换数组中的每个元素","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2635.html","excerpt":"","date":{"time":1684312003000,"string":"2023-05-17 16:26:43"},"frontmatter":{"title":"转换数组中的每个元素","description":"JavaScript 14 天编程挑战","date":"2023-05-17T08:26:43.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"计数器","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2620.html","excerpt":"","date":{"time":1684218403000,"string":"2023-05-16 14:26:43"},"frontmatter":{"title":"计数器","description":"JavaScript 14 天编程挑战","date":"2023-05-16T06:26:43.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"创建 Hello World 函数","description":"JavaScript 14 天编程挑战","cover":{"image":"/vp-blog/covers/js14challenge.png"},"url":"/docs/posts/leetcode2667.html","excerpt":"","date":{"time":1684217356000,"string":"2023-05-16 14:09:16"},"frontmatter":{"title":"创建 Hello World 函数","description":"JavaScript 14 天编程挑战","date":"2023-05-16T06:09:16.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js14challenge.png"}}},{"title":"奇妙头像效果","description":"不需要那么复杂","cover":{"image":"/vp-blog/covers/zjn.jpeg"},"url":"/docs/posts/奇妙头像效果.html","excerpt":"","date":{"time":1684118542000,"string":"2023-05-15 10:42:22"},"frontmatter":{"title":"奇妙头像效果","description":"不需要那么复杂","date":"2023-05-15T02:42:22.000Z","tags":["CSS"],"layout":"post","cover":{"image":"/vp-blog/covers/zjn.jpeg"}}},{"title":"自动操作封装命令行","cover":{"image":"https://plus.unsplash.com/premium_photo-1681126366707-8abb18f5ec5a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3432&q=80"},"url":"/docs/posts/自动操作封装命令行.html","excerpt":"","date":{"time":1684110613000,"string":"2023-05-15 08:30:13"},"frontmatter":{"title":"自动操作封装命令行","date":"2023-05-15T00:30:13.000Z","tags":["macOS","Shell"],"layout":"post","cover":{"image":"https://plus.unsplash.com/premium_photo-1681126366707-8abb18f5ec5a?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=3432&q=80"}}},{"title":"与滚动条绑定的动画","description":"模仿钉钉官网动画","cover":{"image":"https://images.unsplash.com/photo-1682547094629-2d012639aa52?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80"},"url":"/docs/posts/滚动时的动画.html","excerpt":"","date":{"time":1683984589000,"string":"2023-05-13 21:29:49"},"frontmatter":{"title":"与滚动条绑定的动画","description":"模仿钉钉官网动画","date":"2023-05-13T13:29:49.000Z","tags":["CSS","Javascript"],"layout":"post","cover":{"image":"https://images.unsplash.com/photo-1682547094629-2d012639aa52?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80"}}},{"title":"创建自己的小工具","cover":{"image":"/vp-blog/covers/nodejs.png"},"url":"/docs/posts/创建自己的小工具.html","excerpt":"<p>从 hexo 迁移到 vitepress 后，没有发现可以快速创建 post 的命令。</p>\\n<p>手动创建，如果想要精确的设置一个创建时间还是有一点小繁琐的，所以需要一个小脚本帮助我来快速的创建文章的文件。</p>\\n<p>其实，很多时候如果想太多，可能反而会拖累自己，比如我会想，如果创建的文章同名了怎么办？要不要用一些脚手架的三方库来做？要不要发布成库全局安装？</p>\\n<p>后来转念一想，这些问题其实都不是问题。</p>\\n<p>如果创建文章不小心由于同名覆盖了我原来的文章，我完全可以通过 git 的历史找回来。</p>\\n<p>至于脚手架，也不需要那么重，毕竟用户是我自己，我只需要解决自己的需求就可以了。</p>\\n<p>实际脚本也非常简单，只需要内置库即可，dayjs 是本来自定义主题时用到的库，顺手就用来获取时间了。</p>\\n<p>不需要发布成包或者打包成库全局安装，就在我自己的 blog 项目下即可，需要时我只需要通过命令行去调用创建对应的文件。</p>\\n<div class=\\"language-javascript line-numbers-mode\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">javascript</span><pre v-pre class=\\"shiki material-theme-palenight\\" ><code><span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> path </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #82AAFF\\">require</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">path</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> fs </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #82AAFF\\">require</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">node:fs/promises</span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #BABED8\\"> dayjs </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #82AAFF\\">require</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #C3E88D\\">dayjs</span><span style=\\"color: #89DDFF\\">&quot;</span><span style=\\"color: #BABED8\\">)</span><span style=\\"color: #89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color: #89DDFF\\">!</span><span style=\\"color: #BABED8\\">(</span><span style=\\"color: #C792EA\\">async</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #C792EA\\">function</span><span style=\\"color: #89DDFF\\">()</span><span style=\\"color: #BABED8\\"> </span><span style=\\"color: #89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">dir</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">path</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">resolve</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #BABED8\\">__dirname</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">process</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">argv</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #F78C6C\\">2</span><span style=\\"color: #F07178\\">])</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #C792EA\\">const</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">filename</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">=</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">process</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #BABED8\\">argv</span><span style=\\"color: #F07178\\">[</span><span style=\\"color: #F78C6C\\">3</span><span style=\\"color: #F07178\\">] </span><span style=\\"color: #89DDFF\\">+</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">&#39;</span><span style=\\"color: #C3E88D\\">.md</span><span style=\\"color: #89DDFF\\">&#39;</span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span></span>\\n<span class=\\"line\\"><span style=\\"color: #F07178\\">  </span><span style=\\"color: #89DDFF; font-style: italic\\">await</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #BABED8\\">fs</span><span style=\\"color: #89DDFF\\">.</span><span style=\\"color: #82AAFF\\">writeFile</span><span style=\\"color: #F07178\\">(</span><span style=\\"color: #89DDFF\\">`${</span><span style=\\"color: #BABED8\\">dir</span><span style=\\"color: #89DDFF\\">}</span><span style=\\"color: #C3E88D\\">/</span><span style=\\"color: #89DDFF\\">${</span><span style=\\"color: #BABED8\\">filename</span><span style=\\"color: #89DDFF\\">}`</span><span style=\\"color: #89DDFF\\">,</span><span style=\\"color: #F07178\\"> </span><span style=\\"color: #89DDFF\\">`</span></span></code></pre>\\n<div class=\\"line-numbers-wrapper\\" aria-hidden=\\"true\\"><span class=\\"line-number\\">1</span><br><span class=\\"line-number\\">2</span><br><span class=\\"line-number\\">3</span><br><span class=\\"line-number\\">4</span><br><span class=\\"line-number\\">5</span><br><span class=\\"line-number\\">6</span><br><span class=\\"line-number\\">7</span><br><span class=\\"line-number\\">8</span><br><span class=\\"line-number\\">9</span><br></div></div>","date":{"time":1683858436000,"string":"2023-05-12 10:27:16"},"frontmatter":{"title":"创建自己的小工具","date":"2023-05-12T02:27:16.000Z","tags":["Node.js"],"layout":"post","cover":{"image":"/vp-blog/covers/nodejs.png"}}},{"title":"反转链表","description":"Leetcode 92","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/反转链表.html","excerpt":"","date":{"time":1683809850000,"string":"2023-05-11 20:57:30"},"frontmatter":{"layout":"post","title":"反转链表","description":"Leetcode 92","date":"2023-05-11T12:57:30.000Z","tags":["算法"],"cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"手写 base64 编码","description":"通过手写 base64 编码，了解为什么编码后会增加三分之一大小","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/posts/base64.html","excerpt":"","date":{"time":1683698694000,"string":"2023-05-10 14:04:54"},"frontmatter":{"title":"手写 base64 编码","description":"通过手写 base64 编码，了解为什么编码后会增加三分之一大小","date":"2023-05-10T06:04:54.000Z","tags":["算法","Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"vitepress 博文页面内嵌组件实验","description":"本文仅是一个实验","cover":{"image":"/vp-blog/covers/vue.jpeg"},"url":"/docs/posts/vitepress-博文页面内嵌组件实践.html","excerpt":"","date":{"time":1683693853000,"string":"2023-05-10 12:44:13"},"frontmatter":{"title":"vitepress 博文页面内嵌组件实验","description":"本文仅是一个实验","date":"2023-05-10T04:44:13.000Z","tags":["Vue"],"layout":"post","cover":{"image":"/vp-blog/covers/vue.jpeg"}}},{"title":"两数之和","description":"Leetcode 1","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/两数之和.html","excerpt":"","date":{"time":1683687239000,"string":"2023-05-10 10:53:59"},"frontmatter":{"title":"两数之和","description":"Leetcode 1","date":"2023-05-10T02:53:59.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"三数之和","description":"Leetcode 15","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/三数之和.html","excerpt":"","date":{"time":1683645356000,"string":"2023-05-09 23:15:56"},"frontmatter":{"title":"三数之和","description":"Leetcode 15","date":"2023-05-09T15:15:56.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"盛最多水的容器","description":"Leetcode 11","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/力扣-11-盛最多水的容器.html","excerpt":"","date":{"time":1683524147000,"string":"2023-05-08 13:35:47"},"frontmatter":{"title":"盛最多水的容器","description":"Leetcode 11","date":"2023-05-08T05:35:47.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"接雨水","description":"Leetcode 42","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/力扣-42-接雨水.html","excerpt":"","date":{"time":1683521460000,"string":"2023-05-08 12:51:00"},"frontmatter":{"title":"接雨水","description":"Leetcode 42","date":"2023-05-08T04:51:00.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"实践一个大文件上传","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/posts/大文件上传.html","excerpt":"","date":{"time":1683435377000,"string":"2023-05-07 12:56:17"},"frontmatter":{"title":"实践一个大文件上传","date":"2023-05-07T04:56:17.000Z","tags":["Javascript","go"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"震惊，这段代码居然有 4 种执行结果","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/posts/震惊，这段代码居然后有 4  种执行结果.html","excerpt":"","date":{"time":1683260079000,"string":"2023-05-05 12:14:39"},"frontmatter":{"title":"震惊，这段代码居然有 4 种执行结果","date":"2023-05-05T04:14:39.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"仿一个 AppStore 效果","cover":{"image":"/vp-blog/covers/app-store.png"},"url":"/docs/posts/仿一个-AppStore-效果.html","excerpt":"","date":{"time":1683171858000,"string":"2023-05-04 11:44:18"},"frontmatter":{"title":"仿一个 AppStore 效果","date":"2023-05-04T03:44:18.000Z","tags":["Vue","Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/app-store.png"}}},{"title":"React Strict Mode 的作用","description":"为什么我的 useEffect 执行了两次","cover":{"image":"/vp-blog/covers/react.jpeg"},"url":"/docs/posts/React-Strict-Mode-的作用.html","excerpt":"","date":{"time":1683075319000,"string":"2023-05-03 08:55:19"},"frontmatter":{"title":"React Strict Mode 的作用","description":"为什么我的 useEffect 执行了两次","date":"2023-05-03T00:55:19.000Z","tags":["React","Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/react.jpeg"}}},{"title":"null 和 undefined 的区别","description":"看看祖师爷是怎么说的","cover":{"image":"/vp-blog/covers/05.png"},"url":"/docs/posts/null-和-undefined-的区别.html","excerpt":"","date":{"time":1682996765000,"string":"2023-05-02 11:06:05"},"frontmatter":{"title":"null 和 undefined 的区别","description":"看看祖师爷是怎么说的","date":"2023-05-02T03:06:05.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/05.png"}}},{"title":"在 gin 项目中使用 swagger","cover":{"image":"/vp-blog/covers/go.png"},"url":"/docs/posts/在-gin-项目中使用-swagger.html","excerpt":"","date":{"time":1682387843000,"string":"2023-04-25 09:57:23"},"frontmatter":{"title":"在 gin 项目中使用 swagger","date":"2023-04-25T01:57:23.000Z","tags":["go","gin"],"layout":"post","cover":{"image":"/vp-blog/covers/go.png"}}},{"title":"Node.js 打通微信小程序支付","cover":{"image":"/vp-blog/covers/wechatminiprog.png"},"url":"/docs/posts/Node-js-打通微信小程序支付.html","excerpt":"","date":{"time":1682231108000,"string":"2023-04-23 14:25:08"},"frontmatter":{"title":"Node.js 打通微信小程序支付","date":"2023-04-23T06:25:08.000Z","tags":["微信小程序","Node.js","Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/wechatminiprog.png"}}},{"title":"Flutter 与 iOS 通信：MethodChannel","cover":{"image":"/vp-blog/covers/flutter.png"},"url":"/docs/posts/Flutter-与-iOS-通信：MethodChannel.html","excerpt":"","date":{"time":1682217524000,"string":"2023-04-23 10:38:44"},"frontmatter":{"title":"Flutter 与 iOS 通信：MethodChannel","date":"2023-04-23T02:38:44.000Z","tags":["Flutter","iOS","Swift"],"layout":"post","cover":{"image":"/vp-blog/covers/flutter.png"}}},{"title":"Flutter 与 iOS 通信: BasicMessageChannel","cover":{"image":"/vp-blog/covers/flutter.png"},"url":"/docs/posts/Flutter-与-iOS-通信-BasicMessageChannel.html","excerpt":"","date":{"time":1682136300000,"string":"2023-04-22 12:05:00"},"frontmatter":{"title":"Flutter 与 iOS 通信: BasicMessageChannel","date":"2023-04-22T04:05:00.000Z","tags":["Flutter","iOS","Swift"],"layout":"post","cover":{"image":"/vp-blog/covers/flutter.png"}}},{"title":"手写 min-vue-router","cover":{"image":"/vp-blog/covers/vue.jpeg"},"url":"/docs/posts/手写-min-vue-router.html","excerpt":"","date":{"time":1682045363000,"string":"2023-04-21 10:49:23"},"frontmatter":{"title":"手写 min-vue-router","date":"2023-04-21T02:49:23.000Z","tags":["Vue","Vue-router"],"layout":"post","cover":{"image":"/vp-blog/covers/vue.jpeg"}}},{"title":"使 a === 1 && a === 2 && a === 3 为 true 的几种\\"下毒\\"方法","cover":{"image":"/vp-blog/covers/js.png"},"url":"/docs/posts/a-1-a-2-a-3-的几种下毒方法.html","excerpt":"","date":{"time":1681984346000,"string":"2023-04-20 17:52:26"},"frontmatter":{"title":"使 a === 1 && a === 2 && a === 3 为 true 的几种\\"下毒\\"方法","date":"2023-04-20T09:52:26.000Z","tags":["Javascript"],"layout":"post","cover":{"image":"/vp-blog/covers/js.png"}}},{"title":"Swift 原生应用与 WebView 互相通信","cover":{"image":"/vp-blog/covers/swift.png"},"url":"/docs/posts/Swift-原生应用与-WebView-互相通信.html","excerpt":"","date":{"time":1681960233000,"string":"2023-04-20 11:10:33"},"frontmatter":{"title":"Swift 原生应用与 WebView 互相通信","date":"2023-04-20T03:10:33.000Z","tags":["Swift","Javascript","iOS"],"layout":"post","cover":{"image":"/vp-blog/covers/swift.png"}}},{"title":"转换成小写字母，看看 ASCII 码的巧妙设计","description":"力扣 709，看看 ASCII 码的巧妙设计","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/Leetcode-709-转换成小写字母-看看-ASCII-码的巧妙设计.html","excerpt":"","date":{"time":1681695091000,"string":"2023-04-17 09:31:31"},"frontmatter":{"title":"转换成小写字母，看看 ASCII 码的巧妙设计","description":"力扣 709，看看 ASCII 码的巧妙设计","date":"2023-04-17T01:31:31.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}},{"title":"如何命名 ts 中的类型","cover":{"image":"/vp-blog/covers/ts.png"},"url":"/docs/posts/如何命名-ts-中的类型.html","excerpt":"","date":{"time":1681621936000,"string":"2023-04-16 13:12:16"},"frontmatter":{"title":"如何命名 ts 中的类型","date":"2023-04-16T05:12:16.000Z","tags":["Typescript"],"layout":"post","cover":{"image":"/vp-blog/covers/ts.png"}}},{"title":"iOS Swift 工程集成 React Native","cover":{"image":"/vp-blog/covers/react-native.png"},"url":"/docs/posts/ios-swift-工程集成-react-native.html","excerpt":"","date":{"time":1681470829000,"string":"2023-04-14 19:13:49"},"frontmatter":{"title":"iOS Swift 工程集成 React Native","date":"2023-04-14T11:13:49.000Z","tags":["React Native","Swift","iOS"],"layout":"post","cover":{"image":"/vp-blog/covers/react-native.png"}}},{"title":"Element Plus 文档导航效果模仿","cover":{"image":"/vp-blog/covers/css.jpeg"},"url":"/docs/posts/Element-Plus-文档导航效果模仿.html","excerpt":"","date":{"time":1681345519000,"string":"2023-04-13 08:25:19"},"frontmatter":{"title":"Element Plus 文档导航效果模仿","date":"2023-04-13T00:25:19.000Z","tags":["CSS"],"layout":"post","cover":{"image":"/vp-blog/covers/css.jpeg"}}},{"title":"常用的术语及英文缩写","description":"不定期更新","cover":{"image":"/vp-blog/covers/computer-science.jpeg"},"url":"/docs/posts/常用的术语及英文缩写.html","excerpt":"","date":{"time":1681266776000,"string":"2023-04-12 10:32:56"},"frontmatter":{"title":"常用的术语及英文缩写","description":"不定期更新","date":"2023-04-12T02:32:56.000Z","tags":["计算机"],"layout":"post","cover":{"image":"/vp-blog/covers/computer-science.jpeg"}}},{"title":"记一次 RN 第三方组件 react-native-htmlview 问题排查","cover":{"image":"/vp-blog/covers/react-native.png"},"url":"/docs/posts/记一次-RN-第三方组件问题排查.html","excerpt":"","date":{"time":1681208400000,"string":"2023-04-11 18:20:00"},"frontmatter":{"title":"记一次 RN 第三方组件 react-native-htmlview 问题排查","date":"2023-04-11T10:20:00.000Z","tags":["React Native"],"layout":"post","cover":{"image":"/vp-blog/covers/react-native.png"}}},{"title":"经典排序算法之冒泡排序","description":"我的冒泡排序原来一直写错了","cover":{"image":"/vp-blog/covers/leetcode.jpeg"},"url":"/docs/posts/冒泡排序.html","excerpt":"","date":{"time":1681014802000,"string":"2023-04-09 12:33:22"},"frontmatter":{"title":"经典排序算法之冒泡排序","description":"我的冒泡排序原来一直写错了","date":"2023-04-09T04:33:22.000Z","tags":["算法"],"layout":"post","cover":{"image":"/vp-blog/covers/leetcode.jpeg"}}}]'),an={class:"header"},en={class:"container gap-8"},ln={class:"appearance flex items-center gap-8"},on=J({__name:"Navbar",setup(l){const o=Ns(),i=Ys(o);async function F(b){if(!document.startViewTransition){i();return}const E=document.startViewTransition(()=>{i()}),u=(b==null?void 0:b.clientX)??innerWidth/2,B=(b==null?void 0:b.clientY)??innerHeight/2,f=Math.hypot(Math.max(u,innerWidth-u),Math.max(B,innerHeight-B));await E.ready,document.documentElement.animate({clipPath:[`circle(0 at ${u}px ${B}px)`,`circle(${f}px at ${u}px ${B}px)`]},{duration:500,easing:"ease-in",pseudoElement:"::view-transition-new(root)"})}return gs(),(b,E)=>(y(),D("header",an,[c("div",en,[S(Gs),S(Us),S(zs),c("div",ln,[c("a",{href:"javascript:void(0);",onClick:F},[g(o)?(y(),G(g(sn),{key:1,class:"w-6"})):(y(),G(g(nn),{key:0,class:"w-6"}))])]),S(Xs,{class:"social-links"})])]))}});const tn=U(on,[["__scopeId","data-v-ff00b93d"]]),is=l=>(ps("data-v-14563764"),l=l(),rs(),l),pn=["href"],rn={class:"overflow-hidden"},cn=["src"],yn={class:"flex-shrink-0 flex-grow flex flex-col"},Fn={class:"text-xl font-semibold mb-3"},Dn={key:0,class:"text-gray-500"},un=is(()=>c("div",{class:"flex-grow"},null,-1)),dn={class:"flex gap-2"},mn={class:"flex gap-2 items-center text-sm"},gn={class:"flex gap-2"},bn={class:"flex justify-center p-4"},vn=["href"],Bn=is(()=>c("svg",{"aria-hidden":"true",class:"w-5 h-5 mr-2",fill:"currentColor",viewBox:"0 0 20 20",xmlns:"http://www.w3.org/2000/svg"},[c("path",{"fill-rule":"evenodd",d:"M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z","clip-rule":"evenodd"})],-1)),fn=["href"],hn=is(()=>c("svg",{"aria-hidden":"true",class:"w-5 h-5 ml-2",fill:"currentColor",viewBox:"0 0 20 20",xmlns:"http://www.w3.org/2000/svg"},[c("path",{"fill-rule":"evenodd",d:"M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z","clip-rule":"evenodd"})],-1)),es=10,An=J({__name:"Home",setup(l){const{site:o,frontmatter:i}=z(),F=bs(i.value.current??1),b=ls(()=>{const u=(F.value-1)*es;return ts.slice(u,u+es)}),E=ls(()=>Math.ceil(ts.length/es));return ws(()=>i.value.current,function(){F.value=i.value.current??1}),(u,B)=>(y(),D(T,null,[c("div",null,[(y(!0),D(T,null,L(b.value,f=>(y(),D("a",{href:g(o).base.slice(0,-1)+f.url,key:f.url,class:"border my-4 flex gap-4 h-36 p-4 rounded-md"},[c("div",rn,[f.cover?(y(),D("img",{key:0,src:f.cover.image,class:"w-48 h-full object-cover"},null,8,cn)):$("",!0)]),c("div",yn,[c("h1",Fn,C(f.title),1),f.description?(y(),D("div",Dn,C(f.description),1)):$("",!0),un,c("div",dn,[c("div",mn,[S(g(cs),{class:"w-4 h-4"}),O(" 发表于 "+C(f.date.string),1)]),c("div",gn,[(y(!0),D(T,null,L(f.frontmatter.tags,k=>(y(),D("span",{class:"tag",key:k},C(k),1))),128))])])])],8,pn))),128))]),c("div",bn,[F.value!==1?(y(),D("a",{key:0,href:g(ds)(`/articles_${F.value-1}.html`),class:"inline-flex items-center px-4 py-2 mr-3 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"},[Bn,O(" 上一页 ")],8,vn)):$("",!0),F.value!==E.value?(y(),D("a",{key:1,href:g(ds)(`/articles_${F.value+1}.html`),class:"inline-flex items-center px-4 py-2 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white"},[O(" 下一页 "),hn],8,fn)):$("",!0)])],64))}});const En=U(An,[["__scopeId","data-v-14563764"]]);var xn=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Cn(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var Bs={exports:{}};(function(l,o){(function(i,F){l.exports=F()})(xn,function(){var i=1e3,F=6e4,b=36e5,E="millisecond",u="second",B="minute",f="hour",k="day",X="week",j="month",ys="quarter",M="year",V="date",Fs="Invalid Date",As=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,Es=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,xs={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var a=["th","st","nd","rd"],s=t%100;return"["+t+(a[(s-20)%10]||a[s]||a[0])+"]"}},ns=function(t,a,s){var e=String(t);return!e||e.length>=a?t:""+Array(a+1-e.length).join(s)+t},Cs={s:ns,z:function(t){var a=-t.utcOffset(),s=Math.abs(a),e=Math.floor(s/60),n=s%60;return(a<=0?"+":"-")+ns(e,2,"0")+":"+ns(n,2,"0")},m:function t(a,s){if(a.date()<s.date())return-t(s,a);var e=12*(s.year()-a.year())+(s.month()-a.month()),n=a.clone().add(e,j),p=s-n<0,r=a.clone().add(e+(p?-1:1),j);return+(-(e+(s-n)/(p?n-r:r-n))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:j,y:M,w:X,d:k,D:V,h:f,m:B,s:u,ms:E,Q:ys}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return t===void 0}},W="en",Z={};Z[W]=xs;var Ds="$isDayjsObject",as=function(t){return t instanceof Q||!(!t||!t[Ds])},K=function t(a,s,e){var n;if(!a)return W;if(typeof a=="string"){var p=a.toLowerCase();Z[p]&&(n=p),s&&(Z[p]=s,n=p);var r=a.split("-");if(!n&&r.length>1)return t(r[0])}else{var m=a.name;Z[m]=a,n=m}return!e&&n&&(W=n),n||!e&&W},h=function(t,a){if(as(t))return t.clone();var s=typeof a=="object"?a:{};return s.date=t,s.args=arguments,new Q(s)},d=Cs;d.l=K,d.i=as,d.w=function(t,a){return h(t,{locale:a.$L,utc:a.$u,x:a.$x,$offset:a.$offset})};var Q=function(){function t(s){this.$L=K(s.locale,null,!0),this.parse(s),this.$x=this.$x||s.x||{},this[Ds]=!0}var a=t.prototype;return a.parse=function(s){this.$d=function(e){var n=e.date,p=e.utc;if(n===null)return new Date(NaN);if(d.u(n))return new Date;if(n instanceof Date)return new Date(n);if(typeof n=="string"&&!/Z$/i.test(n)){var r=n.match(As);if(r){var m=r[2]-1||0,v=(r[7]||"0").substring(0,3);return p?new Date(Date.UTC(r[1],m,r[3]||1,r[4]||0,r[5]||0,r[6]||0,v)):new Date(r[1],m,r[3]||1,r[4]||0,r[5]||0,r[6]||0,v)}}return new Date(n)}(s),this.init()},a.init=function(){var s=this.$d;this.$y=s.getFullYear(),this.$M=s.getMonth(),this.$D=s.getDate(),this.$W=s.getDay(),this.$H=s.getHours(),this.$m=s.getMinutes(),this.$s=s.getSeconds(),this.$ms=s.getMilliseconds()},a.$utils=function(){return d},a.isValid=function(){return this.$d.toString()!==Fs},a.isSame=function(s,e){var n=h(s);return this.startOf(e)<=n&&n<=this.endOf(e)},a.isAfter=function(s,e){return h(s)<this.startOf(e)},a.isBefore=function(s,e){return this.endOf(e)<h(s)},a.$g=function(s,e,n){return d.u(s)?this[e]:this.set(n,s)},a.unix=function(){return Math.floor(this.valueOf()/1e3)},a.valueOf=function(){return this.$d.getTime()},a.startOf=function(s,e){var n=this,p=!!d.u(e)||e,r=d.p(s),m=function(q,w){var H=d.w(n.$u?Date.UTC(n.$y,w,q):new Date(n.$y,w,q),n);return p?H:H.endOf(k)},v=function(q,w){return d.w(n.toDate()[q].apply(n.toDate("s"),(p?[0,0,0,0]:[23,59,59,999]).slice(w)),n)},A=this.$W,x=this.$M,_=this.$D,I="set"+(this.$u?"UTC":"");switch(r){case M:return p?m(1,0):m(31,11);case j:return p?m(1,x):m(0,x+1);case X:var R=this.$locale().weekStart||0,N=(A<R?A+7:A)-R;return m(p?_-N:_+(6-N),x);case k:case V:return v(I+"Hours",0);case f:return v(I+"Minutes",1);case B:return v(I+"Seconds",2);case u:return v(I+"Milliseconds",3);default:return this.clone()}},a.endOf=function(s){return this.startOf(s,!1)},a.$set=function(s,e){var n,p=d.p(s),r="set"+(this.$u?"UTC":""),m=(n={},n[k]=r+"Date",n[V]=r+"Date",n[j]=r+"Month",n[M]=r+"FullYear",n[f]=r+"Hours",n[B]=r+"Minutes",n[u]=r+"Seconds",n[E]=r+"Milliseconds",n)[p],v=p===k?this.$D+(e-this.$W):e;if(p===j||p===M){var A=this.clone().set(V,1);A.$d[m](v),A.init(),this.$d=A.set(V,Math.min(this.$D,A.daysInMonth())).$d}else m&&this.$d[m](v);return this.init(),this},a.set=function(s,e){return this.clone().$set(s,e)},a.get=function(s){return this[d.p(s)]()},a.add=function(s,e){var n,p=this;s=Number(s);var r=d.p(e),m=function(x){var _=h(p);return d.w(_.date(_.date()+Math.round(x*s)),p)};if(r===j)return this.set(j,this.$M+s);if(r===M)return this.set(M,this.$y+s);if(r===k)return m(1);if(r===X)return m(7);var v=(n={},n[B]=F,n[f]=b,n[u]=i,n)[r]||1,A=this.$d.getTime()+s*v;return d.w(A,this)},a.subtract=function(s,e){return this.add(-1*s,e)},a.format=function(s){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||Fs;var p=s||"YYYY-MM-DDTHH:mm:ssZ",r=d.z(this),m=this.$H,v=this.$m,A=this.$M,x=n.weekdays,_=n.months,I=n.meridiem,R=function(w,H,Y,ss){return w&&(w[H]||w(e,p))||Y[H].slice(0,ss)},N=function(w){return d.s(m%12||12,w,"0")},q=I||function(w,H,Y){var ss=w<12?"AM":"PM";return Y?ss.toLowerCase():ss};return p.replace(Es,function(w,H){return H||function(Y){switch(Y){case"YY":return String(e.$y).slice(-2);case"YYYY":return d.s(e.$y,4,"0");case"M":return A+1;case"MM":return d.s(A+1,2,"0");case"MMM":return R(n.monthsShort,A,_,3);case"MMMM":return R(_,A);case"D":return e.$D;case"DD":return d.s(e.$D,2,"0");case"d":return String(e.$W);case"dd":return R(n.weekdaysMin,e.$W,x,2);case"ddd":return R(n.weekdaysShort,e.$W,x,3);case"dddd":return x[e.$W];case"H":return String(m);case"HH":return d.s(m,2,"0");case"h":return N(1);case"hh":return N(2);case"a":return q(m,v,!0);case"A":return q(m,v,!1);case"m":return String(v);case"mm":return d.s(v,2,"0");case"s":return String(e.$s);case"ss":return d.s(e.$s,2,"0");case"SSS":return d.s(e.$ms,3,"0");case"Z":return r}return null}(w)||r.replace(":","")})},a.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},a.diff=function(s,e,n){var p,r=this,m=d.p(e),v=h(s),A=(v.utcOffset()-this.utcOffset())*F,x=this-v,_=function(){return d.m(r,v)};switch(m){case M:p=_()/12;break;case j:p=_();break;case ys:p=_()/3;break;case X:p=(x-A)/6048e5;break;case k:p=(x-A)/864e5;break;case f:p=x/b;break;case B:p=x/F;break;case u:p=x/i;break;default:p=x}return n?p:d.a(p)},a.daysInMonth=function(){return this.endOf(j).$D},a.$locale=function(){return Z[this.$L]},a.locale=function(s,e){if(!s)return this.$L;var n=this.clone(),p=K(s,e,!0);return p&&(n.$L=p),n},a.clone=function(){return d.w(this.$d,this)},a.toDate=function(){return new Date(this.valueOf())},a.toJSON=function(){return this.isValid()?this.toISOString():null},a.toISOString=function(){return this.$d.toISOString()},a.toString=function(){return this.$d.toUTCString()},t}(),us=Q.prototype;return h.prototype=us,[["$ms",E],["$s",u],["$m",B],["$H",f],["$W",k],["$M",j],["$y",M],["$D",V]].forEach(function(t){us[t[1]]=function(a){return this.$g(a,t[0],t[1])}}),h.extend=function(t,a){return t.$i||(t(a,Q,h),t.$i=!0),h},h.locale=K,h.isDayjs=as,h.unix=function(t){return h(1e3*t)},h.en=Z[W],h.Ls=Z,h.p={},h})})(Bs);var wn=Bs.exports;const ms=Cn(wn),_n={class:"mt-32 text-center"},kn={key:0,class:"m-4 text-gray-500"},jn={class:"m-4 flex justify-center gap-4 text-gray-400"},Sn={class:"icon-text"},Tn={key:0,class:"icon-text"},$n={class:"m-4 flex justify-center gap-2"},Mn={key:0,class:"border-solid border-2 p-1"},Hn=["src"],Zn=J({__name:"Post",setup(l){const{page:o,frontmatter:i}=z();return(F,b)=>{const E=vs("Content");return y(),D(T,null,[c("header",_n,[c("h1",null,C(g(o).title),1),g(o).description?(y(),D("p",kn,C(g(o).description),1)):$("",!0)]),c("div",jn,[c("div",Sn,[S(g(cs),{class:"icon"}),O(" 发表于 "+C(g(ms)(g(i).date).format("YYYY-MM-DD HH:mm:ss")),1)]),g(o).lastUpdated?(y(),D("div",Tn,[S(g(Qs),{class:"icon"}),O(" 更新于 "+C(g(ms)(g(o).lastUpdated).format("YYYY-MM-DD HH:mm:ss")),1)])):$("",!0)]),c("div",$n,[(y(!0),D(T,null,L(g(i).tags,u=>(y(),D("span",{class:"tag",key:u},C(u),1))),128))]),g(i).cover?(y(),D("div",Mn,[c("img",{class:"w-full",src:g(i).cover.image,alt:""},null,8,Hn)])):$("",!0),S(E,{class:"vp-doc prose"})],64)}}});const Rn=U(Zn,[["__scopeId","data-v-af9a4f89"]]);function qn(l){const o={};for(let i=0;i<l.length;i++){const F=l[i],b=F.frontmatter.tags;if(b&&b.length)for(const E of b)o[E]?o[E].push(F):o[E]=[F]}return o}const On=l=>(ps("data-v-05246b43"),l=l(),rs(),l),Vn={class:"mt-32 flex gap-4 flex-wrap"},In=["onClick"],Ln={class:"mt-16"},Pn=["href"],Jn={class:"overflow-hidden"},Wn=["src"],Nn={class:"flex-shrink-0 flex-grow flex flex-col"},Yn={class:"text-xl font-semibold mb-3"},Gn={key:0,class:"text-gray-500"},Un=On(()=>c("div",{class:"flex-grow"},null,-1)),zn={class:"flex gap-2"},Xn={class:"flex gap-2 items-center text-sm"},Kn={class:"flex gap-2"},Qn=J({__name:"Tags",setup(l){const{site:o}=z(),i=ls(()=>qn(ts)),F=bs("");return(b,E)=>(y(),D(T,null,[c("div",Vn,[(y(!0),D(T,null,L(i.value,(u,B)=>(y(),D("a",{href:"javascript:void(0);",class:_s(["px-2 rounded-md text-neutral-950 bg-slate-200",{active:F.value===B}]),key:B,onClick:f=>F.value=B},[O(C(B)+" ",1),c("strong",null,C(u.length),1)],10,In))),128))]),c("div",Ln,[(y(!0),D(T,null,L(i.value[F.value],u=>(y(),D("a",{href:g(o).base.slice(0,-1)+u.url,key:u.url,class:"border my-4 flex gap-4 h-36 p-4 rounded-md"},[c("div",Jn,[u.cover?(y(),D("img",{key:0,src:u.cover.image,class:"w-48 h-full object-cover"},null,8,Wn)):$("",!0)]),c("div",Nn,[c("h1",Yn,C(u.title),1),u.description?(y(),D("div",Gn,C(u.description),1)):$("",!0),Un,c("div",zn,[c("div",Xn,[S(g(cs),{class:"w-4 h-4"}),O(" 发表于 "+C(u.date.string),1)]),c("div",Kn,[(y(!0),D(T,null,L(u.frontmatter.tags,B=>(y(),D("span",{class:"tag",key:B},C(B),1))),128))])])])],8,Pn))),128))])],64))}});const sa=U(Qn,[["__scopeId","data-v-05246b43"]]),fs=l=>(ps("data-v-2ef95e18"),l=l(),rs(),l),na={class:"container"},aa={key:3},ea=fs(()=>c("a",{href:"/"},"Home",-1)),la=fs(()=>c("footer",{class:"rounded-lg m-4"},[c("div",{class:"w-full max-w-screen-xl mx-auto p-4 md:py-8"},[c("span",{class:"block text-sm text-gray-500 sm:text-center dark:text-gray-400"},"© 2023 前端芯事. All Rights Reserved.")])],-1)),oa=J({__name:"TheLayout",setup(l){const{frontmatter:o}=z(),i=gs();return i.onBeforeRouteChange=function(F){return new Promise(async b=>{if(!document.startViewTransition){b(F);return}document.startViewTransition(()=>{b(F)})})},(F,b)=>{const E=vs("Content");return y(),D(T,null,[S(tn),c("div",na,[g(o).home||g(o).pagination?(y(),G(En,{key:0})):g(o).layout==="post"?(y(),G(Rn,{key:1})):g(o).layout==="tags"?(y(),G(sa,{key:2})):(y(),D("div",aa,[ea,S(E)]))]),la],64)}}});const ta=U(oa,[["__scopeId","data-v-2ef95e18"]]),pa={...Ks,Layout:ta};function hs(l){if(l.extends){const o=hs(l.extends);return{...o,...l,async enhanceApp(i){o.enhanceApp&&await o.enhanceApp(i),l.enhanceApp&&await l.enhanceApp(i)}}}return l}const P=hs(pa),ra=J({name:"VitePressApp",setup(){const{site:l}=z();return Vs(()=>{Is(()=>{document.documentElement.lang=l.value.lang,document.documentElement.dir=l.value.dir})}),Ls(),Ps(),Js(),P.setup&&P.setup(),()=>Ws(P.Layout)}});async function ca(){const l=ya(),o=ia();o.provide(js,l);const i=Ss(l.route);return o.provide(Ts,i),o.component("Content",$s),o.component("ClientOnly",Ms),Object.defineProperties(o.config.globalProperties,{$frontmatter:{get(){return i.frontmatter.value}},$params:{get(){return i.page.value.params}}}),P.enhanceApp&&await P.enhanceApp({app:o,router:l,siteData:Hs}),{app:o,router:l,data:i}}function ia(){return Zs(ra)}function ya(){let l=os,o;return Rs(i=>{let F=qs(i);return l&&(o=F),(l||o===F)&&(F=F.replace(/\.js$/,".lean.js")),os&&(l=!1),Os(()=>import(F),[])},P.NotFound)}os&&ca().then(({app:l,router:o,data:i})=>{o.go().then(()=>{ks(o.route,i.site),l.mount("#app")})});export{ca as createApp};
